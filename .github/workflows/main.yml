name: HomeGuard CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: homeguard_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      POSTGRES_DB: homeguard_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up the database
        run: |
          python manage.py makemigrations
          python manage.py migrate

      - name: Run tests
        run: |
          python manage.py test

      - name: Collect static files
        run: |
          python manage.py collectstatic --noinput

      # Commented out the deployment step
      # - name: Deploy to server
      #   if: github.ref == 'refs/heads/main'
      #   env:
      #     SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      #     SSH_HOST: ${{ secrets.SSH_HOST }}
      #     SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      #   run: |
      #     echo "Deploying to server"
      #     mkdir -p ~/.ssh
      #     echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
      #     chmod 600 ~/.ssh/id_rsa
      #     ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
      #     scp -r * $SSH_USERNAME@$SSH_HOST:/path/to/deployment/
      #     ssh $SSH_USERNAME@$SSH_HOST << 'EOF'
      #       cd /path/to/deployment/
      #       source venv/bin/activate
      #       pip install -r requirements.txt
      #       python manage.py migrate
      #       python manage.py collectstatic --noinput
      #       sudo systemctl restart your_application.service
      #     EOF

      # Commented out the notification step
      # - name: Send notification
      #   run: |
      #     # Placeholder for email notification logic
      #     echo "Sending notification"
